[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Running json configuration fetcher...
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file @G:\WX_CAREER\COTS\AssetGenerator\config.json
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: {'metadata': {'generator_name': 'mowx_xftg_wx13', 'version': '2.0.0', 'author': 'MoWx', 'description': 'A tool for generating files from templates', 'created_at': 'May 5 2024', 'last_updated_at': 'May 5 2024'}, 'templates': [{'name': 'C Source File', 'source_file': 'Can', 'file_extension': '.c', 'description': 'Template for generating C source file', 'file_header': [{'name': 'FILENAME', 'value': 'Can.c', 'description': ''}, {'name': 'AUTHOR', 'value': 'AUTOSarZs-DevTeam', 'description': ''}, {'name': 'DATE', 'value': '2024-5-12', 'description': ''}, {'name': 'VERSION', 'value': '1.0.0', 'description': ''}, {'name': 'PLATFORM', 'value': 'Tiva C', 'description': ''}, {'name': 'VENDOR', 'value': 'AUTOSarZs OLC', 'description': ''}, {'name': 'SPECIFICATION(S)', 'value': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'description': ''}, {'name': 'MAY BE CHANGED BY USER', 'value': 'No', 'description': ''}, {'name': 'DESCRIPTION', 'value': 'CAN Driver source file', 'description': ''}, {'name': 'LICENSE', 'value': 'MPL 2.0', 'description': ''}], 'file_sections': [{'name': 'include_common_headers', 'value': 'Include Common Headres', 'description': ''}, {'name': 'include_other_headers', 'value': 'Include Other Headres', 'description': ''}, {'name': 'include_component_headers', 'value': 'Include Component Headres', 'description': ''}, {'name': 'local_macros_definition', 'value': 'Local Macro Definition', 'description': ''}, {'name': 'local_types_definition', 'value': 'Local Types Definition', 'description': ''}, {'name': 'exported_variables_definition', 'value': 'Exported Variables Definition', 'description': ''}, {'name': 'local_enums_definition', 'value': 'Local Enums Definition', 'description': ''}, {'name': 'local_variables_definition', 'value': 'Local Variables Definition', 'description': ''}, {'name': 'local_structs_definition', 'value': 'Local Structs Definition', 'description': ''}, {'name': 'local_unions_definition', 'value': 'Local Unions Definition', 'description': ''}, {'name': 'local_functions_declaration', 'value': 'Local Functions Declaration', 'description': ''}, {'name': 'local_functions_definition', 'value': 'Local Functions Definition', 'description': ''}, {'name': 'global_functions_definition', 'value': 'Global Functions Definition', 'description': ''}], 'file_fill_values': {'include_common_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_other_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_component_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_macros_definition': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_structs_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'conditional_include_macro': '', 'description': ''}], 'local_enums_definition': [{'name': 'x', 'members': {'mem1': 'value', 'mem2': 'value'}, 'description': ''}], 'local_unions_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'description': ''}], 'local_types_definition': [{'base_name': 'can_rx', 'new_name': 'can_rx_t', 'type': 'struct', 'description': 'x'}, {'base_name': 'y', 'new_name': 'y', 'type': 'y', 'description': 'y'}], 'exported_variables_definition': [{'name': 'x', 'type': 'x', 'description': 'x'}], 'local_variables_definition': [{'name': 'can_rx_buffer[256]', 'type': 'u8', 'compiler': 'ALIGN(4)', 'description': ''}], 'local_functions_declaration': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'local_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'global_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'global', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'global', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}]}}]}
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the json configuration file @G:\WX_CAREER\COTS\AssetGenerator\config.json
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file metadata
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Checking the generator name
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Valid generator name found
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: {'generator_name': 'mowx_xftg_wx13', 'version': '2.0.0', 'author': 'MoWx', 'description': 'A tool for generating files from templates', 'created_at': 'May 5 2024', 'last_updated_at': 'May 5 2024'}
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the json configuration file metadata
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file templates
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [{'name': 'C Source File', 'source_file': 'Can', 'file_extension': '.c', 'description': 'Template for generating C source file', 'file_header': [{'name': 'FILENAME', 'value': 'Can.c', 'description': ''}, {'name': 'AUTHOR', 'value': 'AUTOSarZs-DevTeam', 'description': ''}, {'name': 'DATE', 'value': '2024-5-12', 'description': ''}, {'name': 'VERSION', 'value': '1.0.0', 'description': ''}, {'name': 'PLATFORM', 'value': 'Tiva C', 'description': ''}, {'name': 'VENDOR', 'value': 'AUTOSarZs OLC', 'description': ''}, {'name': 'SPECIFICATION(S)', 'value': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'description': ''}, {'name': 'MAY BE CHANGED BY USER', 'value': 'No', 'description': ''}, {'name': 'DESCRIPTION', 'value': 'CAN Driver source file', 'description': ''}, {'name': 'LICENSE', 'value': 'MPL 2.0', 'description': ''}], 'file_sections': [{'name': 'include_common_headers', 'value': 'Include Common Headres', 'description': ''}, {'name': 'include_other_headers', 'value': 'Include Other Headres', 'description': ''}, {'name': 'include_component_headers', 'value': 'Include Component Headres', 'description': ''}, {'name': 'local_macros_definition', 'value': 'Local Macro Definition', 'description': ''}, {'name': 'local_types_definition', 'value': 'Local Types Definition', 'description': ''}, {'name': 'exported_variables_definition', 'value': 'Exported Variables Definition', 'description': ''}, {'name': 'local_enums_definition', 'value': 'Local Enums Definition', 'description': ''}, {'name': 'local_variables_definition', 'value': 'Local Variables Definition', 'description': ''}, {'name': 'local_structs_definition', 'value': 'Local Structs Definition', 'description': ''}, {'name': 'local_unions_definition', 'value': 'Local Unions Definition', 'description': ''}, {'name': 'local_functions_declaration', 'value': 'Local Functions Declaration', 'description': ''}, {'name': 'local_functions_definition', 'value': 'Local Functions Definition', 'description': ''}, {'name': 'global_functions_definition', 'value': 'Global Functions Definition', 'description': ''}], 'file_fill_values': {'include_common_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_other_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_component_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_macros_definition': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_structs_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'conditional_include_macro': '', 'description': ''}], 'local_enums_definition': [{'name': 'x', 'members': {'mem1': 'value', 'mem2': 'value'}, 'description': ''}], 'local_unions_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'description': ''}], 'local_types_definition': [{'base_name': 'can_rx', 'new_name': 'can_rx_t', 'type': 'struct', 'description': 'x'}, {'base_name': 'y', 'new_name': 'y', 'type': 'y', 'description': 'y'}], 'exported_variables_definition': [{'name': 'x', 'type': 'x', 'description': 'x'}], 'local_variables_definition': [{'name': 'can_rx_buffer[256]', 'type': 'u8', 'compiler': 'ALIGN(4)', 'description': ''}], 'local_functions_declaration': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'local_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'global_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'global', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'global', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}]}}]
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Number of templates provided: 1
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Checking the template format
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Validating the json configuration file template format
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [*] name[template:0]: ['C Source File']
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [*] description[template:0]: ['Template for generating C source file']
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [*] file_extension[template:0]: ['.c']
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [*] source_file[template:0]: ['Can']
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [*] file_header[template:0]: [[{'name': 'FILENAME', 'value': 'Can.c', 'description': ''}, {'name': 'AUTHOR', 'value': 'AUTOSarZs-DevTeam', 'description': ''}, {'name': 'DATE', 'value': '2024-5-12', 'description': ''}, {'name': 'VERSION', 'value': '1.0.0', 'description': ''}, {'name': 'PLATFORM', 'value': 'Tiva C', 'description': ''}, {'name': 'VENDOR', 'value': 'AUTOSarZs OLC', 'description': ''}, {'name': 'SPECIFICATION(S)', 'value': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'description': ''}, {'name': 'MAY BE CHANGED BY USER', 'value': 'No', 'description': ''}, {'name': 'DESCRIPTION', 'value': 'CAN Driver source file', 'description': ''}, {'name': 'LICENSE', 'value': 'MPL 2.0', 'description': ''}]]
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [*] file_sections[template:0]: [[{'name': 'include_common_headers', 'value': 'Include Common Headres', 'description': ''}, {'name': 'include_other_headers', 'value': 'Include Other Headres', 'description': ''}, {'name': 'include_component_headers', 'value': 'Include Component Headres', 'description': ''}, {'name': 'local_macros_definition', 'value': 'Local Macro Definition', 'description': ''}, {'name': 'local_types_definition', 'value': 'Local Types Definition', 'description': ''}, {'name': 'exported_variables_definition', 'value': 'Exported Variables Definition', 'description': ''}, {'name': 'local_enums_definition', 'value': 'Local Enums Definition', 'description': ''}, {'name': 'local_variables_definition', 'value': 'Local Variables Definition', 'description': ''}, {'name': 'local_structs_definition', 'value': 'Local Structs Definition', 'description': ''}, {'name': 'local_unions_definition', 'value': 'Local Unions Definition', 'description': ''}, {'name': 'local_functions_declaration', 'value': 'Local Functions Declaration', 'description': ''}, {'name': 'local_functions_definition', 'value': 'Local Functions Definition', 'description': ''}, {'name': 'global_functions_definition', 'value': 'Global Functions Definition', 'description': ''}]]
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [*] file_fill_values[template:0]: [{'include_common_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_other_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_component_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_macros_definition': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_structs_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'conditional_include_macro': '', 'description': ''}], 'local_enums_definition': [{'name': 'x', 'members': {'mem1': 'value', 'mem2': 'value'}, 'description': ''}], 'local_unions_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'description': ''}], 'local_types_definition': [{'base_name': 'can_rx', 'new_name': 'can_rx_t', 'type': 'struct', 'description': 'x'}, {'base_name': 'y', 'new_name': 'y', 'type': 'y', 'description': 'y'}], 'exported_variables_definition': [{'name': 'x', 'type': 'x', 'description': 'x'}], 'local_variables_definition': [{'name': 'can_rx_buffer[256]', 'type': 'u8', 'compiler': 'ALIGN(4)', 'description': ''}], 'local_functions_declaration': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'local_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'global_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'global', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'global', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}]}]
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Valid template format
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template file header
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Number of headers in file header 0: 10
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing file header 0:
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [{'name': 'FILENAME', 'value': 'Can.c', 'description': ''}, {'name': 'AUTHOR', 'value': 'AUTOSarZs-DevTeam', 'description': ''}, {'name': 'DATE', 'value': '2024-5-12', 'description': ''}, {'name': 'VERSION', 'value': '1.0.0', 'description': ''}, {'name': 'PLATFORM', 'value': 'Tiva C', 'description': ''}, {'name': 'VENDOR', 'value': 'AUTOSarZs OLC', 'description': ''}, {'name': 'SPECIFICATION(S)', 'value': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'description': ''}, {'name': 'MAY BE CHANGED BY USER', 'value': 'No', 'description': ''}, {'name': 'DESCRIPTION', 'value': 'CAN Driver source file', 'description': ''}, {'name': 'LICENSE', 'value': 'MPL 2.0', 'description': ''}]
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Collected fields: {'FILENAME': 'Can.c', 'AUTHOR': 'AUTOSarZs-DevTeam', 'DATE': '2024-5-12', 'VERSION': '1.0.0', 'PLATFORM': 'Tiva C', 'VENDOR': 'AUTOSarZs OLC', 'SPECIFICATION(S)': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'MAY BE CHANGED BY USER': 'No', 'DESCRIPTION': 'CAN Driver source file', 'LICENSE': 'MPL 2.0'}
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file headers
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template file section
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Number of sections in file sections 0: 13
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing file section 0:
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: [{'name': 'include_common_headers', 'value': 'Include Common Headres', 'description': ''}, {'name': 'include_other_headers', 'value': 'Include Other Headres', 'description': ''}, {'name': 'include_component_headers', 'value': 'Include Component Headres', 'description': ''}, {'name': 'local_macros_definition', 'value': 'Local Macro Definition', 'description': ''}, {'name': 'local_types_definition', 'value': 'Local Types Definition', 'description': ''}, {'name': 'exported_variables_definition', 'value': 'Exported Variables Definition', 'description': ''}, {'name': 'local_enums_definition', 'value': 'Local Enums Definition', 'description': ''}, {'name': 'local_variables_definition', 'value': 'Local Variables Definition', 'description': ''}, {'name': 'local_structs_definition', 'value': 'Local Structs Definition', 'description': ''}, {'name': 'local_unions_definition', 'value': 'Local Unions Definition', 'description': ''}, {'name': 'local_functions_declaration', 'value': 'Local Functions Declaration', 'description': ''}, {'name': 'local_functions_definition', 'value': 'Local Functions Definition', 'description': ''}, {'name': 'global_functions_definition', 'value': 'Global Functions Definition', 'description': ''}]
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Collected fields: {'include_common_headers': 'Include Common Headres', 'include_other_headers': 'Include Other Headres', 'include_component_headers': 'Include Component Headres', 'local_macros_definition': 'Local Macro Definition', 'local_types_definition': 'Local Types Definition', 'exported_variables_definition': 'Exported Variables Definition', 'local_enums_definition': 'Local Enums Definition', 'local_variables_definition': 'Local Variables Definition', 'local_structs_definition': 'Local Structs Definition', 'local_unions_definition': 'Local Unions Definition', 'local_functions_declaration': 'Local Functions Declaration', 'local_functions_definition': 'Local Functions Definition', 'global_functions_definition': 'Global Functions Definition'}
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file sections
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (include_common_headers)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Fetched Header: default_value_x, Conditional Include Macro: , Description: 
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (include_common_headers)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (include_other_headers)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Fetched Header: default_value_x, Conditional Include Macro: , Description: 
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (include_other_headers)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (component_headers)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Fetched Header: default_value_x, Conditional Include Macro: , Description: 
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (component_headers)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (macros definition)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Macro: default_value_x, Conditional Include Macro: , Description: 
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (macros definition)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (structs_definition)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Struct: default_value_x, Conditional Include Macro: , Compiler: {'packed_attribute': 'x'}, Members: [('x', 'x'), ('x', 'x')], Description: 
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (structs_definition)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (enums_definition)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Enum: x, Members: {'mem1': 'value', 'mem2': 'value'}, Description: 
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (enums_definition)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (unions_definition)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Union: default_value_x, Compiler: {'packed_attribute': 'x'}, Members: [('x', 'x'), ('x', 'x')], Description: 
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (unions_definition)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (local_types_definition)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Type: can_rx, New Name: can_rx_t, Type: struct, Description: x
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Type: y, New Name: y, Type: y, Description: y
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (local_types_definition)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (exported_variables_definition)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Exported Variable: x, Type: x, Description: x
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (exported_variables_definition)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (local_variables_definition)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Variable: can_rx_buffer[256], Type: u8, Attributes: ALIGN(4), Description: 
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (local_variables_definition)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (local functions declaration)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Function: SetControllerBaudrate, Return Type: void, Arguments: [('BaseAddress', 'uint32'), ('BRConfig', 'CanControllerBaudrateConfig*'), ('CanCpuClock', 'McuClockReferencePoint')], Data: {'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': ''}
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Function: Can_write, Return Type: Std_ReturnType, Arguments: [('Hth', 'Can_HwHandleType'), ('PduInfo', 'Can_PduType*')], Data: {'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (functions)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (local functions definition)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Function: SetControllerBaudrate, Return Type: void, Arguments: [('BaseAddress', 'uint32'), ('BRConfig', 'CanControllerBaudrateConfig*'), ('CanCpuClock', 'McuClockReferencePoint')], Data: {'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': ''}
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Function: Can_write, Return Type: Std_ReturnType, Arguments: [('Hth', 'Can_HwHandleType'), ('PduInfo', 'Can_PduType*')], Data: {'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (local functions definition)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Parsing the json configuration file template fill values (global functions definition)
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Function: SetControllerBaudrate, Return Type: void, Arguments: [('BaseAddress', 'uint32'), ('BRConfig', 'CanControllerBaudrateConfig*'), ('CanCpuClock', 'McuClockReferencePoint')], Data: {'local_global': 'global', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': ''}
[DEBUG|logy|L62] 2024-05-12T18:27:28+0300: parse_cfg_json: Function: Can_write, Return Type: Std_ReturnType, Arguments: [('Hth', 'Can_HwHandleType'), ('PduInfo', 'Can_PduType*')], Data: {'local_global': 'global', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template file fill values (global functions definition)
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Successfully parsed the template fill values
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Running analyzer...
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: 
+------------------------------+---------+
| Attribute                    |   Value |
+==============================+=========+
| Number of Templates Provided |       1 |
+------------------------------+---------+
| Number of C Templates        |       1 |
+------------------------------+---------+
| Number of H Templates        |       0 |
+------------------------------+---------+
| Number of Common Headers     |       1 |
+------------------------------+---------+
| Number of Other Headers      |       1 |
+------------------------------+---------+
| Number of Component Headers  |       1 |
+------------------------------+---------+
| Number of Enums              |       1 |
+------------------------------+---------+
| Number of Structs            |       1 |
+------------------------------+---------+
| Number of Unions             |       1 |
+------------------------------+---------+
| Number of Macros             |       1 |
+------------------------------+---------+
| Number of Exported Variables |       1 |
+------------------------------+---------+
| Number of Local Variables    |       1 |
+------------------------------+---------+
| Number of Functions          |       2 |
+------------------------------+---------+
| Number of Services           |       3 |
+------------------------------+---------+
[INFO|logy|L65] 2024-05-12T18:27:28+0300: parse_cfg_json: Done running json configuration fetcher
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Running json configuration fetcher...
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file @G:\WX_CAREER\COTS\AssetGenerator\config.json
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: {'metadata': {'generator_name': 'mowx_xftg_wx13', 'version': '2.0.0', 'author': 'MoWx', 'description': 'A tool for generating files from templates', 'created_at': 'May 5 2024', 'last_updated_at': 'May 5 2024'}, 'templates': [{'name': 'C Source File', 'source_file': 'Can', 'file_extension': '.c', 'description': 'Template for generating C source file', 'file_header': [{'name': 'FILENAME', 'value': 'Can.c', 'description': ''}, {'name': 'AUTHOR', 'value': 'AUTOSarZs-DevTeam', 'description': ''}, {'name': 'DATE', 'value': '2024-5-12', 'description': ''}, {'name': 'VERSION', 'value': '1.0.0', 'description': ''}, {'name': 'PLATFORM', 'value': 'Tiva C', 'description': ''}, {'name': 'VENDOR', 'value': 'AUTOSarZs OLC', 'description': ''}, {'name': 'SPECIFICATION(S)', 'value': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'description': ''}, {'name': 'MAY BE CHANGED BY USER', 'value': 'No', 'description': ''}, {'name': 'DESCRIPTION', 'value': 'CAN Driver source file', 'description': ''}, {'name': 'LICENSE', 'value': 'MPL 2.0', 'description': ''}], 'file_sections': [{'name': 'include_common_headers', 'value': 'Include Common Headres', 'description': ''}, {'name': 'include_other_headers', 'value': 'Include Other Headres', 'description': ''}, {'name': 'include_component_headers', 'value': 'Include Component Headres', 'description': ''}, {'name': 'local_macros_definition', 'value': 'Local Macro Definition', 'description': ''}, {'name': 'local_types_definition', 'value': 'Local Types Definition', 'description': ''}, {'name': 'exported_variables_definition', 'value': 'Exported Variables Definition', 'description': ''}, {'name': 'local_enums_definition', 'value': 'Local Enums Definition', 'description': ''}, {'name': 'local_variables_definition', 'value': 'Local Variables Definition', 'description': ''}, {'name': 'local_structs_definition', 'value': 'Local Structs Definition', 'description': ''}, {'name': 'local_unions_definition', 'value': 'Local Unions Definition', 'description': ''}, {'name': 'local_functions_declaration', 'value': 'Local Functions Declaration', 'description': ''}, {'name': 'local_functions_definition', 'value': 'Local Functions Definition', 'description': ''}, {'name': 'global_functions_definition', 'value': 'Global Functions Definition', 'description': ''}], 'file_fill_values': {'include_common_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_other_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_component_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_macros_definition': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_structs_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'conditional_include_macro': '', 'description': ''}], 'local_enums_definition': [{'name': 'x', 'members': {'mem1': 'value', 'mem2': 'value'}, 'description': ''}], 'local_unions_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'description': ''}], 'local_types_definition': [{'base_name': 'can_rx', 'new_name': 'can_rx_t', 'type': 'struct', 'description': 'x'}, {'base_name': 'y', 'new_name': 'y', 'type': 'y', 'description': 'y'}], 'exported_variables_definition': [{'name': 'x', 'type': 'x', 'description': 'x'}], 'local_variables_definition': [{'name': 'can_rx_buffer[256]', 'type': 'u8', 'compiler': 'ALIGN(4)', 'description': ''}], 'local_functions_declaration': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'local_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'global_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'global', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'global', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}]}}]}
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the json configuration file @G:\WX_CAREER\COTS\AssetGenerator\config.json
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file metadata
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Checking the generator name
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Valid generator name found
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: {'generator_name': 'mowx_xftg_wx13', 'version': '2.0.0', 'author': 'MoWx', 'description': 'A tool for generating files from templates', 'created_at': 'May 5 2024', 'last_updated_at': 'May 5 2024'}
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the json configuration file metadata
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file templates
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [{'name': 'C Source File', 'source_file': 'Can', 'file_extension': '.c', 'description': 'Template for generating C source file', 'file_header': [{'name': 'FILENAME', 'value': 'Can.c', 'description': ''}, {'name': 'AUTHOR', 'value': 'AUTOSarZs-DevTeam', 'description': ''}, {'name': 'DATE', 'value': '2024-5-12', 'description': ''}, {'name': 'VERSION', 'value': '1.0.0', 'description': ''}, {'name': 'PLATFORM', 'value': 'Tiva C', 'description': ''}, {'name': 'VENDOR', 'value': 'AUTOSarZs OLC', 'description': ''}, {'name': 'SPECIFICATION(S)', 'value': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'description': ''}, {'name': 'MAY BE CHANGED BY USER', 'value': 'No', 'description': ''}, {'name': 'DESCRIPTION', 'value': 'CAN Driver source file', 'description': ''}, {'name': 'LICENSE', 'value': 'MPL 2.0', 'description': ''}], 'file_sections': [{'name': 'include_common_headers', 'value': 'Include Common Headres', 'description': ''}, {'name': 'include_other_headers', 'value': 'Include Other Headres', 'description': ''}, {'name': 'include_component_headers', 'value': 'Include Component Headres', 'description': ''}, {'name': 'local_macros_definition', 'value': 'Local Macro Definition', 'description': ''}, {'name': 'local_types_definition', 'value': 'Local Types Definition', 'description': ''}, {'name': 'exported_variables_definition', 'value': 'Exported Variables Definition', 'description': ''}, {'name': 'local_enums_definition', 'value': 'Local Enums Definition', 'description': ''}, {'name': 'local_variables_definition', 'value': 'Local Variables Definition', 'description': ''}, {'name': 'local_structs_definition', 'value': 'Local Structs Definition', 'description': ''}, {'name': 'local_unions_definition', 'value': 'Local Unions Definition', 'description': ''}, {'name': 'local_functions_declaration', 'value': 'Local Functions Declaration', 'description': ''}, {'name': 'local_functions_definition', 'value': 'Local Functions Definition', 'description': ''}, {'name': 'global_functions_definition', 'value': 'Global Functions Definition', 'description': ''}], 'file_fill_values': {'include_common_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_other_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_component_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_macros_definition': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_structs_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'conditional_include_macro': '', 'description': ''}], 'local_enums_definition': [{'name': 'x', 'members': {'mem1': 'value', 'mem2': 'value'}, 'description': ''}], 'local_unions_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'description': ''}], 'local_types_definition': [{'base_name': 'can_rx', 'new_name': 'can_rx_t', 'type': 'struct', 'description': 'x'}, {'base_name': 'y', 'new_name': 'y', 'type': 'y', 'description': 'y'}], 'exported_variables_definition': [{'name': 'x', 'type': 'x', 'description': 'x'}], 'local_variables_definition': [{'name': 'can_rx_buffer[256]', 'type': 'u8', 'compiler': 'ALIGN(4)', 'description': ''}], 'local_functions_declaration': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'local_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'global_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'global', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'global', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}]}}]
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Number of templates provided: 1
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Checking the template format
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Validating the json configuration file template format
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [*] name[template:0]: ['C Source File']
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [*] description[template:0]: ['Template for generating C source file']
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [*] file_extension[template:0]: ['.c']
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [*] source_file[template:0]: ['Can']
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [*] file_header[template:0]: [[{'name': 'FILENAME', 'value': 'Can.c', 'description': ''}, {'name': 'AUTHOR', 'value': 'AUTOSarZs-DevTeam', 'description': ''}, {'name': 'DATE', 'value': '2024-5-12', 'description': ''}, {'name': 'VERSION', 'value': '1.0.0', 'description': ''}, {'name': 'PLATFORM', 'value': 'Tiva C', 'description': ''}, {'name': 'VENDOR', 'value': 'AUTOSarZs OLC', 'description': ''}, {'name': 'SPECIFICATION(S)', 'value': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'description': ''}, {'name': 'MAY BE CHANGED BY USER', 'value': 'No', 'description': ''}, {'name': 'DESCRIPTION', 'value': 'CAN Driver source file', 'description': ''}, {'name': 'LICENSE', 'value': 'MPL 2.0', 'description': ''}]]
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [*] file_sections[template:0]: [[{'name': 'include_common_headers', 'value': 'Include Common Headres', 'description': ''}, {'name': 'include_other_headers', 'value': 'Include Other Headres', 'description': ''}, {'name': 'include_component_headers', 'value': 'Include Component Headres', 'description': ''}, {'name': 'local_macros_definition', 'value': 'Local Macro Definition', 'description': ''}, {'name': 'local_types_definition', 'value': 'Local Types Definition', 'description': ''}, {'name': 'exported_variables_definition', 'value': 'Exported Variables Definition', 'description': ''}, {'name': 'local_enums_definition', 'value': 'Local Enums Definition', 'description': ''}, {'name': 'local_variables_definition', 'value': 'Local Variables Definition', 'description': ''}, {'name': 'local_structs_definition', 'value': 'Local Structs Definition', 'description': ''}, {'name': 'local_unions_definition', 'value': 'Local Unions Definition', 'description': ''}, {'name': 'local_functions_declaration', 'value': 'Local Functions Declaration', 'description': ''}, {'name': 'local_functions_definition', 'value': 'Local Functions Definition', 'description': ''}, {'name': 'global_functions_definition', 'value': 'Global Functions Definition', 'description': ''}]]
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [*] file_fill_values[template:0]: [{'include_common_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_other_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'include_component_headers': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_macros_definition': [{'name': 'default_value_x', 'conditional_include_macro': '', 'description': ''}], 'local_structs_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'conditional_include_macro': '', 'description': ''}], 'local_enums_definition': [{'name': 'x', 'members': {'mem1': 'value', 'mem2': 'value'}, 'description': ''}], 'local_unions_definition': [{'name': 'default_value_x', 'compiler': {'packed_attribute': 'x'}, 'members': [{'name': 'x', 'type': 'x', 'bit_field': ''}, {'name': 'x', 'type': 'x', 'bit_field': ''}], 'description': ''}], 'local_types_definition': [{'base_name': 'can_rx', 'new_name': 'can_rx_t', 'type': 'struct', 'description': 'x'}, {'base_name': 'y', 'new_name': 'y', 'type': 'y', 'description': 'y'}], 'exported_variables_definition': [{'name': 'x', 'type': 'x', 'description': 'x'}], 'local_variables_definition': [{'name': 'can_rx_buffer[256]', 'type': 'u8', 'compiler': 'ALIGN(4)', 'description': ''}], 'local_functions_declaration': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'local_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}], 'global_functions_definition': [{'name': 'SetControllerBaudrate', 'return_type': 'void', 'local_global': 'global', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'BaseAddress', 'type': 'uint32', 'description': ''}, {'name': 'BRConfig', 'type': 'CanControllerBaudrateConfig*', 'description': ''}, {'name': 'CanCpuClock', 'type': 'McuClockReferencePoint', 'description': ''}], 'compiler': {'inline_attribute': '__attribute__((always_inline))'}, 'service_name': '', 'service_id': '', 'sync_async': '', 'reentrancy': ''}, {'name': 'Can_write', 'return_type': 'Std_ReturnType', 'local_global': 'global', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'arguments': [{'name': 'Hth', 'type': 'Can_HwHandleType', 'description': ''}, {'name': 'PduInfo', 'type': 'Can_PduType*', 'description': ''}], 'compiler': {}, 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}]}]
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Valid template format
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template file header
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Number of headers in file header 0: 10
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing file header 0:
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [{'name': 'FILENAME', 'value': 'Can.c', 'description': ''}, {'name': 'AUTHOR', 'value': 'AUTOSarZs-DevTeam', 'description': ''}, {'name': 'DATE', 'value': '2024-5-12', 'description': ''}, {'name': 'VERSION', 'value': '1.0.0', 'description': ''}, {'name': 'PLATFORM', 'value': 'Tiva C', 'description': ''}, {'name': 'VENDOR', 'value': 'AUTOSarZs OLC', 'description': ''}, {'name': 'SPECIFICATION(S)', 'value': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'description': ''}, {'name': 'MAY BE CHANGED BY USER', 'value': 'No', 'description': ''}, {'name': 'DESCRIPTION', 'value': 'CAN Driver source file', 'description': ''}, {'name': 'LICENSE', 'value': 'MPL 2.0', 'description': ''}]
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Collected fields: {'FILENAME': 'Can.c', 'AUTHOR': 'AUTOSarZs-DevTeam', 'DATE': '2024-5-12', 'VERSION': '1.0.0', 'PLATFORM': 'Tiva C', 'VENDOR': 'AUTOSarZs OLC', 'SPECIFICATION(S)': 'Specification of CAN Driver, AUTOSAR Release 4.3.1', 'MAY BE CHANGED BY USER': 'No', 'DESCRIPTION': 'CAN Driver source file', 'LICENSE': 'MPL 2.0'}
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file headers
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template file section
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Number of sections in file sections 0: 13
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing file section 0:
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: [{'name': 'include_common_headers', 'value': 'Include Common Headres', 'description': ''}, {'name': 'include_other_headers', 'value': 'Include Other Headres', 'description': ''}, {'name': 'include_component_headers', 'value': 'Include Component Headres', 'description': ''}, {'name': 'local_macros_definition', 'value': 'Local Macro Definition', 'description': ''}, {'name': 'local_types_definition', 'value': 'Local Types Definition', 'description': ''}, {'name': 'exported_variables_definition', 'value': 'Exported Variables Definition', 'description': ''}, {'name': 'local_enums_definition', 'value': 'Local Enums Definition', 'description': ''}, {'name': 'local_variables_definition', 'value': 'Local Variables Definition', 'description': ''}, {'name': 'local_structs_definition', 'value': 'Local Structs Definition', 'description': ''}, {'name': 'local_unions_definition', 'value': 'Local Unions Definition', 'description': ''}, {'name': 'local_functions_declaration', 'value': 'Local Functions Declaration', 'description': ''}, {'name': 'local_functions_definition', 'value': 'Local Functions Definition', 'description': ''}, {'name': 'global_functions_definition', 'value': 'Global Functions Definition', 'description': ''}]
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Collected fields: {'include_common_headers': 'Include Common Headres', 'include_other_headers': 'Include Other Headres', 'include_component_headers': 'Include Component Headres', 'local_macros_definition': 'Local Macro Definition', 'local_types_definition': 'Local Types Definition', 'exported_variables_definition': 'Exported Variables Definition', 'local_enums_definition': 'Local Enums Definition', 'local_variables_definition': 'Local Variables Definition', 'local_structs_definition': 'Local Structs Definition', 'local_unions_definition': 'Local Unions Definition', 'local_functions_declaration': 'Local Functions Declaration', 'local_functions_definition': 'Local Functions Definition', 'global_functions_definition': 'Global Functions Definition'}
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file sections
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (include_common_headers)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Fetched Header: default_value_x, Conditional Include Macro: , Description: 
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (include_common_headers)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (include_other_headers)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Fetched Header: default_value_x, Conditional Include Macro: , Description: 
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (include_other_headers)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (component_headers)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Fetched Header: default_value_x, Conditional Include Macro: , Description: 
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (component_headers)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (macros definition)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Macro: default_value_x, Conditional Include Macro: , Description: 
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (macros definition)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (structs_definition)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Struct: default_value_x, Conditional Include Macro: , Compiler: {'packed_attribute': 'x'}, Members: [('x', 'x'), ('x', 'x')], Description: 
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (structs_definition)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (enums_definition)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Enum: x, Members: {'mem1': 'value', 'mem2': 'value'}, Description: 
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (enums_definition)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (unions_definition)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Union: default_value_x, Compiler: {'packed_attribute': 'x'}, Members: [('x', 'x'), ('x', 'x')], Description: 
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (unions_definition)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (local_types_definition)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Type: can_rx, New Name: can_rx_t, Type: struct, Description: x
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Type: y, New Name: y, Type: y, Description: y
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (local_types_definition)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (exported_variables_definition)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Exported Variable: x, Type: x, Description: x
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (exported_variables_definition)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (local_variables_definition)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Variable: can_rx_buffer[256], Type: u8, Attributes: ALIGN(4), Description: 
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (local_variables_definition)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (local functions declaration)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Function: SetControllerBaudrate, Return Type: void, Arguments: [('BaseAddress', 'uint32'), ('BRConfig', 'CanControllerBaudrateConfig*'), ('CanCpuClock', 'McuClockReferencePoint')], Data: {'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': ''}
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Function: Can_write, Return Type: Std_ReturnType, Arguments: [('Hth', 'Can_HwHandleType'), ('PduInfo', 'Can_PduType*')], Data: {'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (functions)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (local functions definition)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Function: SetControllerBaudrate, Return Type: void, Arguments: [('BaseAddress', 'uint32'), ('BRConfig', 'CanControllerBaudrateConfig*'), ('CanCpuClock', 'McuClockReferencePoint')], Data: {'local_global': 'local', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': ''}
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Function: Can_write, Return Type: Std_ReturnType, Arguments: [('Hth', 'Can_HwHandleType'), ('PduInfo', 'Can_PduType*')], Data: {'local_global': 'local', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (local functions definition)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Parsing the json configuration file template fill values (global functions definition)
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Function: SetControllerBaudrate, Return Type: void, Arguments: [('BaseAddress', 'uint32'), ('BRConfig', 'CanControllerBaudrateConfig*'), ('CanCpuClock', 'McuClockReferencePoint')], Data: {'local_global': 'global', 'service_flag': 'false', 'description': 'This function sets the baud rate', 'requirement': 'SWS_Can_00223', 'notes': ''}
[DEBUG|logy|L62] 2024-05-12T18:28:52+0300: parse_cfg_json: Function: Can_write, Return Type: Std_ReturnType, Arguments: [('Hth', 'Can_HwHandleType'), ('PduInfo', 'Can_PduType*')], Data: {'local_global': 'global', 'service_flag': 'true', 'description': 'This function is called by CanIf to pass a CAN message to CanDrv for transmission.', 'requirement': 'SWS_Can_00223', 'notes': '', 'service_name': 'Can_write', 'service_id': '0x06', 'sync_async': 'Synchronous', 'reentrancy': 'Reentrant (Thread-Safe)'}
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template file fill values (global functions definition)
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Successfully parsed the template fill values
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Running analyzer...
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: 
+------------------------------+---------+
| Attribute                    |   Value |
+==============================+=========+
| Number of Templates Provided |       1 |
+------------------------------+---------+
| Number of C Templates        |       1 |
+------------------------------+---------+
| Number of H Templates        |       0 |
+------------------------------+---------+
| Number of Common Headers     |       1 |
+------------------------------+---------+
| Number of Other Headers      |       1 |
+------------------------------+---------+
| Number of Component Headers  |       1 |
+------------------------------+---------+
| Number of Enums              |       1 |
+------------------------------+---------+
| Number of Structs            |       1 |
+------------------------------+---------+
| Number of Unions             |       1 |
+------------------------------+---------+
| Number of Macros             |       1 |
+------------------------------+---------+
| Number of Exported Variables |       1 |
+------------------------------+---------+
| Number of Local Variables    |       1 |
+------------------------------+---------+
| Number of Functions          |       2 |
+------------------------------+---------+
| Number of Services           |       3 |
+------------------------------+---------+
[INFO|logy|L65] 2024-05-12T18:28:52+0300: parse_cfg_json: Done running json configuration fetcher
