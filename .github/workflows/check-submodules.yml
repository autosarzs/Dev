name: check-submodule
on:
  workflow_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
    
env:
  GIT_AUTHOR_NAME: Actionbot
  GIT_AUTHOR_EMAIL: actions@github.com
  DOCS_DIR_NAME: Docs
  MAIN_DIR_NAME: Dev
  USER_NAME: ${{ github.repository_owner }}

jobs:
  check-update-docs-submodule:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Fetch submodules

      - name: Check for Submodule Changes
        id: check_submodule
        uses: ./.github/actions/check_submodule
        with:
          submodule_path: ${{ env.DOCS_DIR_NAME }}

      - name: Get check_submodule return value
        env:
          SELECTED_VAR: ${{ steps.check_submodule.outputs.is_submodule_need_update }}
        run: |
          echo " OUTPUT = $SELECTED_VAR "
      - name: Synch Branch Here 
        env:
          SELECTED_VAR: ${{ steps.check_submodule.outputs.is_submodule_need_update }}
        if: steps.check_submodule.outputs.is_submodule_need_update == 1
        uses: ./.github/actions/update-submodule
        with:
          submodule_path: ${{ env.DOCS_DIR_NAME }}
          commit_msg: "GitAction: Update ${{ env.DOCS_DIR_NAME }}"
          user_name: ${{ env.USER_NAME }}
          email: ${{ env.GIT_AUTHOR_EMAIL }}

      - name: Confirmation Step
        id: conf_step
        uses: ./.github/actions/check_submodule
        with:
          submodule_path: ${{ env.DOCS_DIR_NAME }}

      - name: Check Branch state [Shouldn't be run if everything is correct]
        env:
          SELECTED_VAR: ${{ steps.conf_step.outputs.is_submodule_need_update }}
        if: steps.conf_step.outputs.is_submodule_need_update != 0
        run: exit 1 # Error


  job-sync-docs-to-wiki:
    runs-on: ubuntu-latest
    needs: [check-update-docs-submodule]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Fetch submodules
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: echo SHA
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          echo "The latest commit SHA is $COMMIT_SHA"

      - name: Init Workspace
        run: |
          mkdir tbd_private_docs
          cd tbd_private_docs
          cp -r ../${{ env.DOCS_DIR_NAME }}/* .
          rm -rf *.git*

      - name: Sync Wiki with Docs       
        uses: newrelic/wiki-sync-action@v1.0.1
        with:
          source: tbd_private_docs
          destination: wiki
          token: ${{ secrets.PAT }}
          gitAuthorName: ${{ env.GIT_AUTHOR_NAME }}
          gitAuthorEmail: ${{ env.GIT_AUTHOR_EMAIL }}

      - name: Reorganise workspace
        shell: bash
        run: |
          rm -rf tbd_private_docs
          git clean -f -d
          git reset --hard 

  check-update-wiki-submodule:
    runs-on: ubuntu-latest
    needs: [job-sync-docs-to-wiki]
    permissions:
      contents: write

    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Fetch submodules

      - name: Check for Submodule Changes
        id: check_submodule
        uses: ./.github/actions/check_submodule
        with:
          submodule_path: ${{ env.MAIN_DIR_NAME }}.wiki
          branch: master

      - name: Get check_submodule return value
        env:
          SELECTED_VAR: ${{ steps.check_submodule.outputs.is_submodule_need_update }}
        run: |
          echo " OUTPUT = $SELECTED_VAR "

      - name: Synch Branch With Autosarz 
        env:
          SELECTED_VAR: ${{ steps.check_submodule.outputs.is_submodule_need_update }}
        if: steps.check_submodule.outputs.is_submodule_need_update == 1
        uses: ./.github/actions/update-submodule
        with:
          submodule_path: ${{ env.MAIN_DIR_NAME }}.wiki
          branch: master
          commit_msg: "GitAction:Update ${{ env.MAIN_DIR_NAME }}.wiki"
          user_name: ${{ env.USER_NAME }}
          email: ${{ env.GIT_AUTHOR_EMAIL }}

      - name: Confirmation Step
        id: conf_step
        uses: ./.github/actions/check_submodule
        with:
          submodule_path: ${{ env.MAIN_DIR_NAME }}.wiki
          branch: master

      - name: Check Branch state [Shouldn't be run if everything is correct]
        env:
          SELECTED_VAR: ${{ steps.conf_step.outputs.is_submodule_need_update }}
        if: steps.conf_step.outputs.is_submodule_need_update != 0
        run: exit 1 # Error